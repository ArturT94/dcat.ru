<div class="assessment-rating">
                                <!-- Rating Stars Box -->
                                <ul id='rating-star' class="rating-star" data-name="test">
                                    <li class='rating-star__item' title='Очень хуево...' data-value='1'>
                                        <svg width="32" height="30" viewBox="0 0 20 19" xmlns="http://www.w3.org/2000/svg"><path d="M10.3876 14.6279L10 14.394L9.61245 14.6279L4.95134 17.4412L6.18062 12.1394L6.28261 11.6995L5.94159 11.4036L1.82981 7.835L7.25443 7.36723L7.70405 7.32846L7.88038 6.91305L10 1.91949L12.1196 6.91305L12.296 7.32846L12.7456 7.36723L18.168 7.83481L14.0489 11.4031L13.7068 11.6995L13.8096 12.1404L15.0458 17.4394L10.3876 14.6279Z" stroke-width="1.5"/></svg>
                                    </li>
                                    <li class='rating-star__item' title='Плохо' data-value='2'>
                                        <svg width="32" height="30" viewBox="0 0 20 19" xmlns="http://www.w3.org/2000/svg"><path d="M10.3876 14.6279L10 14.394L9.61245 14.6279L4.95134 17.4412L6.18062 12.1394L6.28261 11.6995L5.94159 11.4036L1.82981 7.835L7.25443 7.36723L7.70405 7.32846L7.88038 6.91305L10 1.91949L12.1196 6.91305L12.296 7.32846L12.7456 7.36723L18.168 7.83481L14.0489 11.4031L13.7068 11.6995L13.8096 12.1404L15.0458 17.4394L10.3876 14.6279Z" stroke-width="1.5"/></svg>
                                    </li>
                                    <li class='rating-star__item' title='Нейтрально' data-value='3'>
                                        <svg width="32" height="30" viewBox="0 0 20 19" xmlns="http://www.w3.org/2000/svg"><path d="M10.3876 14.6279L10 14.394L9.61245 14.6279L4.95134 17.4412L6.18062 12.1394L6.28261 11.6995L5.94159 11.4036L1.82981 7.835L7.25443 7.36723L7.70405 7.32846L7.88038 6.91305L10 1.91949L12.1196 6.91305L12.296 7.32846L12.7456 7.36723L18.168 7.83481L14.0489 11.4031L13.7068 11.6995L13.8096 12.1404L15.0458 17.4394L10.3876 14.6279Z" stroke-width="1.5"/></svg>
                                    </li>
                                    <li class='rating-star__item' title='Хорошо' data-value='4'>
                                        <svg width="32" height="30" viewBox="0 0 20 19" xmlns="http://www.w3.org/2000/svg"><path d="M10.3876 14.6279L10 14.394L9.61245 14.6279L4.95134 17.4412L6.18062 12.1394L6.28261 11.6995L5.94159 11.4036L1.82981 7.835L7.25443 7.36723L7.70405 7.32846L7.88038 6.91305L10 1.91949L12.1196 6.91305L12.296 7.32846L12.7456 7.36723L18.168 7.83481L14.0489 11.4031L13.7068 11.6995L13.8096 12.1404L15.0458 17.4394L10.3876 14.6279Z" stroke-width="1.5"/></svg>
                                    </li>
                                    <li class='rating-star__item' title='Отлично!!!' data-value='5'>
                                        <svg width="32" height="30" viewBox="0 0 20 19" xmlns="http://www.w3.org/2000/svg"><path d="M10.3876 14.6279L10 14.394L9.61245 14.6279L4.95134 17.4412L6.18062 12.1394L6.28261 11.6995L5.94159 11.4036L1.82981 7.835L7.25443 7.36723L7.70405 7.32846L7.88038 6.91305L10 1.91949L12.1196 6.91305L12.296 7.32846L12.7456 7.36723L18.168 7.83481L14.0489 11.4031L13.7068 11.6995L13.8096 12.1404L15.0458 17.4394L10.3876 14.6279Z" stroke-width="1.5"/></svg>
                                    </li>
                                </ul>

                                <div class='rating-box'>
                                    <div class='rating-box_text'></div>
                                </div>
                            </div>















.rating-box {
    margin: 0 0;
    padding: 5px 0;
    border: none;
    background: #fff;
}

.rating-box_text {
    font-size: 12px;
    line-height: 20px;
    display: flex;
    align-items: center;
    color: #006FB6;
}

.rating-star {
    list-style-type: none;
    padding: 0;

    -moz-user-select: none;
    -webkit-user-select: none;
}

.rating-star__item {
    margin-right: 10px;
    display: inline-block;
    fill: transparent;
    stroke: #A4A4A4;
    transition: all 0.3s ease;
}

.rating-star__item:last-child {
    margin-right: 0;
}

.rating-star__item.is-hover {
    fill: #006FB6;
    stroke: #006FB6;
    transition: all 0.3s ease;
}

.rating-star__item.is-selected {
    fill: #006FB6;
    stroke: #006FB6;
    transition: all 0.3s ease;
}


























/*!
 * jQuery lightweight plugin boilerplate
 * Original author: @ajpiano
 * Further changes, comments: @addyosmani
 * Licensed under the MIT license
 */

// the semi-colon before the function invocation is a safety
// net against concatenated scripts and/or other plugins
// that are not closed properly.
;
(function ($, window, document, undefined) {

    // undefined is used here as the undefined global
    // variable in ECMAScript 3 and is mutable (i.e. it can
    // be changed by someone else). undefined isn't really
    // being passed in so we can ensure that its value is
    // truly undefined. In ES5, undefined can no longer be
    // modified.

    // window and document are passed through as local
    // variables rather than as globals, because this (slightly)
    // quickens the resolution process and can be more
    // efficiently minified (especially when both are
    // regularly referenced in your plugin).

    // Create the defaults once
    var pluginName = "ratingStar",
        defaults = {
            initialStar: 0,
            selectedClass: 'is-selected',
            hoverClass: 'is-hover',
            afterClick: null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.$element = $(element);

        this.options = $.extend({}, defaults, options);

        this._defaults = defaults;
        this._name = pluginName;

        this.init();
    }

    Plugin.prototype = {

        init: function () {
            var self = this;

            this.$starItems = this.$element.find('.rating-star__item');

            /* 1. Visualizing things on Hover - See next part for action on click */
            this.$starItems.on('mouseover', function () {
                self.onMouseOver(self, this);
            }).on('mouseout', function () {
                self.onMouseOut(self, this);
            });

            /* 2. Action to perform on click */
            this.$starItems.on('click', function () {
                self.onClick(self, this);
            });
        },

        onClick: function (context, jqContext) {
            var $this = $(jqContext);
            var $stars = context.$starItems;
            var onStar = parseInt($this.data('value'), 10); // The star currently selected

            // remove all active star
            $stars.removeClass('is-selected');

            for (i = 0; i < onStar; i++) {
                $stars.eq(i).addClass('is-selected');
            }

            var $selected = $this.parent().children('.is-selected').last();
            var ratingValue = parseInt($selected.data('value'), 10);

            if (context.options.afterClick) {
                context.options.afterClick(ratingValue, $selected);
            }
        },

        onMouseOver: function (context, jqContext) {
            // The star currently mouse on
            var currentStar = parseInt($(jqContext).data('value'), 10);

            // all start item
            var $stars = context.$starItems;

            // Now highlight all the stars that's not after the current hovered star   
            for (i = 0; i <= currentStar; i++) {
                if (i < currentStar) {
                    $stars.eq(i).addClass('is-hover');
                } else {
                    $stars.eq(i).removeClass('is-hover');
                }
            }

            console.log('mouse over on: ', jqContext);
            console.log('current star: ', currentStar);

        },

        onMouseOut: function (context, jqContext) {
            for (i = 0; i <= context.$starItems.length; i++) {
                context.$starItems.eq(i).removeClass('is-hover');
            }
        }
    };

    // A really lightweight plugin wrapper around the constructor,
    // preventing against multiple instantiations
    $.fn[pluginName] = function (options) {
        return this.each(function () {
            if (!$.data(this, "plugin_" + pluginName)) {
                $.data(this, "plugin_" + pluginName,
                    new Plugin(this, options));
            }
        });
    };

})(jQuery, window, document);


$(document).ready(function () {

    $('#rating-star').ratingStar({
        afterClick: function (value, el) {
            $('.rating-box').fadeIn(200);
            $('.rating-box_text').html("<span>" + el.attr('title') + "</span>");
        }
    });

});


